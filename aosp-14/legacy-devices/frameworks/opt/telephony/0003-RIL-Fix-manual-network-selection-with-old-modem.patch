From 84c229d6fb5df215ea5b73dec8e079711e0a2f71 Mon Sep 17 00:00:00 2001
From: faust93 <monumentum@gmail.com>
Date: Wed, 19 Sep 2018 14:26:54 +0800
Subject: [PATCH 03/10] RIL: Fix manual network selection with old modem

 * Old modem sends and applies mccmnc+network type, but new aosp
   telephony uses only digits.
 * Manually cut or append the "+" and strings after that to work around.

Change-Id: I1015e6c0d6afdc0c03d70e9491d49331703eddcc
---
 src/java/com/android/internal/telephony/RIL.java         | 9 +++++++++
 .../com/android/internal/telephony/RadioResponse.java    | 6 +++++-
 2 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/src/java/com/android/internal/telephony/RIL.java b/src/java/com/android/internal/telephony/RIL.java
index 5ecdfcbbd4..08a84f5909 100644
--- a/src/java/com/android/internal/telephony/RIL.java
+++ b/src/java/com/android/internal/telephony/RIL.java
@@ -222,6 +222,8 @@ public class RIL extends BaseCommands implements CommandsInterface {
 
     final Integer mPhoneId;
 
+    private boolean mUseOldMncMccFormat;
+
     private static final String PROPERTY_IS_VONR_ENABLED = "persist.radio.is_vonr_enabled_";
 
     public static final int MIN_SERVICE_IDX = HAL_SERVICE_RADIO;
@@ -1132,6 +1134,9 @@ public class RIL extends BaseCommands implements CommandsInterface {
             if (proxies == null) throw ex;
         }
 
+        mUseOldMncMccFormat = SystemProperties.getBoolean(
+                "ro.telephony.use_old_mnc_mcc_format", false);
+
         TelephonyManager tm = (TelephonyManager) context.getSystemService(
                 Context.TELEPHONY_SERVICE);
         mIsCellularSupported = tm.isVoiceCapable() || tm.isSmsCapable() || tm.isDataCapable();
@@ -2557,6 +2562,10 @@ public class RIL extends BaseCommands implements CommandsInterface {
             RILRequest rr = obtainRequest(RIL_REQUEST_SET_NETWORK_SELECTION_MANUAL, result,
                     mRILDefaultWorkSource);
 
+            if (mUseOldMncMccFormat && !TextUtils.isEmpty(operatorNumeric)) {
+                operatorNumeric += "+";
+            }
+
             if (RILJ_LOGD) {
                 riljLog(rr.serialString() + "> " + RILUtils.requestToString(rr.mRequest)
                         + " operatorNumeric = " + operatorNumeric + ", ran = " + ran);
diff --git a/src/java/com/android/internal/telephony/RadioResponse.java b/src/java/com/android/internal/telephony/RadioResponse.java
index 0bc29583fb..8a52dfbbb2 100644
--- a/src/java/com/android/internal/telephony/RadioResponse.java
+++ b/src/java/com/android/internal/telephony/RadioResponse.java
@@ -2450,8 +2450,12 @@ public class RadioResponse extends IRadioResponse.Stub {
         if (rr != null) {
             ArrayList<OperatorInfo> ret = new ArrayList<OperatorInfo>();
             for (int i = 0; i < networkInfos.size(); i++) {
+                String operatorNumeric = networkInfos.get(i).operatorNumeric;
+                if (operatorNumeric != null) {
+                    operatorNumeric = operatorNumeric.split("\\+")[0];
+                }
                 ret.add(new OperatorInfo(networkInfos.get(i).alphaLong,
-                        networkInfos.get(i).alphaShort, networkInfos.get(i).operatorNumeric,
+                        networkInfos.get(i).alphaShort, operatorNumeric,
                         RILUtils.convertHalOperatorStatus(networkInfos.get(i).status)));
             }
             if (responseInfo.error == RadioError.NONE) {
-- 
2.30.2

