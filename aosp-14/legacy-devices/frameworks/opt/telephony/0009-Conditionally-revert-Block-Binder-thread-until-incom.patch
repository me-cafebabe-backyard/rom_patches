From a4bffc3bdea01229ec64242b89e3f564845ded5c Mon Sep 17 00:00:00 2001
From: ExactExampl <exactxmpl@pixelexperience.org>
Date: Tue, 11 Oct 2022 12:38:00 +0300
Subject: [PATCH 9/9] Conditionally revert "Block Binder thread until incoming
 call process completes"

* Legacy IMS packages handling incoming calls in such a way that
  a blocked binder thread won`t allow to complete call setup,
  thus we have half dead incoming calls with unattached call session
  (caller can hear dialing tone whereas recipient got nothing)

This conditionally reverts commit 75c3dc9ba272b43971f519caba0382f9871c7d9d.

Change-Id: I55a8f3bbca4a2b9a6bc7511e9fe2d0884a8818e5
---
 .../telephony/imsphone/ImsPhoneCallTracker.java        | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java b/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java
index df96af55ff..f6d1c1ece8 100644
--- a/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java
+++ b/src/java/com/android/internal/telephony/imsphone/ImsPhoneCallTracker.java
@@ -386,7 +386,15 @@ public class ImsPhoneCallTracker extends CallTracker implements ImsPullCall {
         @Nullable
         public IImsCallSessionListener onIncomingCall(
                 @NonNull IImsCallSession c, @Nullable String callId, @Nullable Bundle extras) {
-            return executeAndWaitForReturn(()-> processIncomingCall(c, callId, extras));
+            final boolean shouldBlockBinderThreadOnIncomingCalls = SystemProperties.getBoolean(
+                    "ro.telephony.block_binder_thread_on_incoming_calls", true);
+            if (shouldBlockBinderThreadOnIncomingCalls) {
+                // for legacy IMS we want to avoid blocking the binder thread, otherwise
+                // we end up with half dead incoming calls with unattached call session
+                return TelephonyUtils.runWithCleanCallingIdentity(()-> processIncomingCall(c, callId, extras), mExecutor);
+            } else {
+                return executeAndWaitForReturn(()-> processIncomingCall(c, callId, extras));
+            }
         }
 
         @Override
-- 
2.30.2

